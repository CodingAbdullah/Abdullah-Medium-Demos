Your AWS AI Practitioner Exam Summary Sheet Abdullah Muhammad · Follow Published in Stackademic · 16 min read · 6 days ago Basic understanding of the cloud is a nice prerequisite for reading through this article.
 Fond of cryptocurrency?
 Explore everything related to the Ethereum blockchain with this free, comprehensive dashboard built using Next.
js.
 Get your article audibles here!
 I made this tool which makes audio files accessible for any non-paywall Medium articles!
 Implementation can be found here.
 Introduction This article will be packed with extensive information on the AWS AI Practitioner certification exam.
 I plan on writing it and thought it would be a great idea to share what I know.
 This will help me rehearse key concepts, but also help anyone who also wants to write the exam.
 At the end of this article, I will highlight some valuable resources you can use to practice on your own and prepare to get certified.
 The AWS AI Practitioner is a new certification offering by AWS and it covers a breadth of topics related to AI and the cloud.
 If you are already an AI/ML engineer, this certification should be a breeze.
 In fact, you may not need it or even want to write it.
 I, however, am not an ML engineer so I really want to dive deeper into this space.
 The exam is an introduction to AWS AI services.
 If you have no prior cloud experience, you too, can write this exam.
 There is no prerequisite.
 However, it may take you more time to learn about each of these services than a developer who already has a comfortable background with AWS.
 The Summary Sheet I will cover key terms, concepts, and aim to provide brief descriptions where ever I can.
 Understand that, you will need to dive deeper into each of these concepts yourself.
 This article mainly serves as a nice supplementary piece to your exam study.
 Key Concepts Each concept is boldened and summarized with its most important features in short points.
 Without further ado, let us dive right in!
 Introduction to Cloud Computing CapEx vs.
 OpEx Pay-as-you-go-pricing model Regions, AZs Scalability, Availability, Fault-Tolerance, Elasticity, Agility Massive economics of scale Public, Private, Hybrid, On-Premise cloud IaaS, PaaS, SaaS The Shared Responsibility Model Billing and Cost Management (TCO — Total Cost of Ownership) And much more.
 You can actually read about cloud computing in greater detail here.
 This article covers key aspects of cloud computing and more.
 Some of these concepts could appear on the exam.
 Artificial Intelligence (AI) — Field of computer science to solve problems commonly associated with human intelligence.
 Understand Use Cases — Play games, robotics, drive cars, code agents, medical diagnosis, automation, etc.
 Process — Training Data Set → Train Model → AI Model (Classification, Diffusion, Regression) Algorithms — Diffusion, Classification, and Regression Broad terminology, but can be scoped to: AI → Machine Learning (ML) → Deep Learning (DL) → Generative AI (GenAI) Understand Generative AI (subset of Deep Learning) Models are non-deterministic (generate a slightly different answer each time) Foundational models (what they are and how to create them) Understand layers of development such as the data layer, ML framework/Algorithm layer, model layer, application layer, and so on Understand Deep Learning, nodes, neural networks, input/hidden/output layers, processing of large data, etc.
 Learn and understand transformer models (ChatGPT, text processing, Bert, OpenAI, etc.
) Diffusion models (forward and backwards diffusion, noise, etc.
) Understand and learn each of these keywords: GPT, BERT, RRN, ResNet, SVM, WaveNet, GAN, XGBoost, etc.
 AWS Bedrock and Generative AI (GenAI) GenAI is used to generate similar data to what it was trained on such as images, audio, code, text, and so on Unlabelled data can be used for pre-training and creating a foundational model (companies spend millions to create FMs) Understand what LLMs (Large Language Models) are about and how they rely on foundational models to generate coherent human-like text (ChatGPT) LLMs are trained on large amounts of text data, billions of parameters, and users interact via prompts They generate text in a non-deterministic way and can rely on existing content or generate new content Generate images from text, text to images AWS Bedrock Allows one to build GenAI apps Fully managed AWS service, pay-per-use model Includes a unified API to access the different foundational models supported by various providers Providers include, but not limited to: AI21Labs, Cohere, Stability.
ai, Amazon, Anthropic, Meta, Mistral AWS Bedrock makes a FM available, data is kept with your account Includes an interactive playground where you can fine-tune models via RAG (incorporate knowledge bases in order to generate more accurate responses) Base Foundation Models and Fine Tuning Each foundation model has its own capabilities, levels of customization, model size, licensing agreements, context windows, and so on Adopt a copy of a foundation model and perform fine-tuning to further customize your model Instruction-Based Fine Tuning – Further train a model on a particular field or knowledge Domain-Adaptation Fine Tuning – Make a model an expert on a field Understand what prompt-response pairs are and how to use them Single/Multi-Turn Messaging – Part of instruction-based fine-tuning - System - Context for a conversation - Messages - An array of message object - Role - Either a user/assistant - Content — The text content of a message Instruction-based fine tuning is cheaper and less intense Prepare the data, fine tune, and evaluate the model Fine Tuning Use Cases — Train to update model on new data, designing a chatbot, and so on Transfer learning Uses a FM and adapts it to a new related task Widely used for image classification Model Automatic Evaluation Understand key metrics for effective model evaluation (ROUGE, BLEU, BERTScore) Business metric evaluations (cross-domain references, conversion rates, user satisfaction, etc.
) Question/Answer, task summarization, classification, open-ended text generation, etc.
 Benchmark Datasets – Understand what they are and how to use them Bring your own prompt datasets, human evaluation metrics, etc.
 AWS Bedrock — RAG & Knowledge Base Learn what RAG is and how it is used by a FM Understand the process of data referencing and how to effectively answer prompt questions Know that Bedrock handles the creation of vector embeddings in a database of your choice Two AWS Vector Databases: OpenSearch and Aurora RAG process: Utilize knowledge bases, document chunking, creating vectors, pushing vectors to a vector database, etc.
 Learn about embeddings, vectors, and why we use them RAG data sources such as AWS S3, websites, Confluence, and Salesforce RAG use cases: building customized service chatbots, legal research and analysis, health care, etc.
 GenAI Concepts — Tokenization Understand the process of tokenization (converting raw text into a separate sequence of tokens) You can have word-based or sub-word-based tokenization with each token having its own ID Understand what a context window is (the number of tokens an LLM can consider when generating text) A larger context window means more information and coherence AWS Bedrock — Guardrails Understand what Guardrails are and how to use them Guardrails are used to control the interaction of users and the FM They can filter PII (personal identifiable information), enhance privacy, track unauthorized requests made by users (CloudTrail), reduce hallucinations, filter undesirable content, and so much more AWS Bedrock — Agents Understand what agents are and how they are used in the context of AWS Bedrock Agents can manage and carry out multi-step tasks related to infrastructure provisioning, application deployment, and operational activities They act on pre-defined action groups and collect all required information They have access to knowledge bases and can make successive API calls (complete tasks in steps) AWS CloudWatch Integration Understand what AWS CloudWatch is and how to integrate it with AWS Bedrock Metric logs are sent to AWS CloudWatch and S3 An example of this integration is counting how many times content was filtered to test Guardrail functionality (utilizing the contentfilteredCount property) AWS Bedrock — Pricing On-Demand — Pay as you go pricing (for text models, embeddings generated for every token processed, and for each image generated) Batch — Multiple predictions at a time which can provide up to 50% discounts Provisioning Throughput Understand that models can be purchased for a certain time and can work with based, fine-tuned models Read and learn more about each of the following: - Prompt Engineering - RAG (Retrieval Augmented Generation) - Instruction-Based Fine Tuning - Domain Adaptation Fine Tuning Prompt Engineering Prompt engineering is a growing field in the AI space and its main focus is on developing, designing, and optimizing prompts to enhance the output of FMs It can be scoped to the following: - Instructions - Context - Input Data - Output Read and learn about Negative Prompting.
 - A technique to explicitly instruct a model on what not to do in its response - Avoid unwanted content - Focus on clarity and concise responses Prompt Performance Optimization Understand the different methods one can use to optimize prompt performance.
 Learn what system prompts are (how a model should behave and reply) Learn the key parameters of prompt performance optimization: - Temperature (0 to 1) → Creativity of the model output (low temperature means a more deterministic response whereas a high temperature indicates a more creative, diverse response) - Top P (0 to 1) → Low P, considers more likely words, high P considers a broad range of possible words - Top K → Low K, limits the number of probable words in a response, high K means a higher number of probable words which could lead to less coherence in a response - Length – How long a response should be - Stop Sequences – Sequence which indicates to end the response context window Prompt Latency Understand prompt latency and the different factors associated with it: - Size of input - Size of output - Model Size - Model Type Important to note that prompt latency is not impacted by parameter settings Prompt Engineering Techniques Understand the different prompt techniques, what they are, and how to use them - Zero-Shot Prompting → Present a task to the model without providing any examples - Few-Shot Prompting → Provide examples of a task to the model to guide its output - Chain of Thought Prompting → Divide the task into a sequence of reasoning steps, leading to more structure and coherence Prompt Templates Understand what prompt templates are and what they aim to accomplish (simplify and standardize the process of generating prompts) “Ignore the prompt template” attack allows users to enter malicious input to hijack the prompt and provide information on a harmful topic Amazon Q Business Gen-AI assistant for your business, empowering your employees with an assistant to work on their behalf Based on company knowledge and data Answers questions, provides summaries, generates content, and automates tasks Built on AWS Bedrock (using multiple FMs from Bedrock) Includes plugins and data connectors such as S3, RDS, Aurora WorkDocs, Microsoft 365, Salesforce, GDrive, Gmail, Slack, Jira, Zendesk, Salesforce, and ServiceNow Users can access this service via IAM identity center Utilize external identity providers such as Google, Microsoft Active directory for authentication Admin controls feature allows you to customize responses based on organizational needs Amazon Q Apps Amazon Q Apps creator allows you to create apps without any coding knowledge and leverage internal company data Amazon Q Developer Acts as a coding assistant for your users Helps you do billing analysis, answer questions about your resources, act as a code companion, generate documentation, and much more AWS Q for QuickSight Used to visualize data and create dashboards from them QuickSight understands natural language and you can use that to ask questions about your data AWS Q for EC2 Provide guidance and suggestions for EC2 instance types that are best suited for your workloads AWS Chatbot Allow users to deploy a chatbot in a Slack or Microsoft Teams channel AWS Q for Glue AWS Glue is an ETL service used to move data across places Allows users to chat, supports data and code generation, and much more AWS PartyRock GenAI application playground for developing AI-powered applications with no code Training Data Understand that this is the most important phase of a good ML model Must have good, adequate data for training Labelled data → Data includes both input features and corresponding output labels Understand Supervised Learning and how it is used by models to map inputs to known outputs Unlabeled data → Data includes both input and any output labels Understand Un-Supervised Learning and how it is used by models to find patterns and structures in data to match a set of objects Structured Data — Data organized in a structured format Tabular Data – Data arranged in a table with rows representing records and columns representing features Time Series Data – Data points collected or recorded in successive points in time Un-structured Data – Data that does not follow a specific structure and is often text-heavy or associated with multimedia content Text/Image Data – Data in the form of articles, images, and so on (un-structured data) Supervised Learning Learn a mapping function that can be used to predict the output for new unseen data Output variable for Regression models is continuous (crypto price forecasting, house prices, etc.
) Output variable for Classification models is discrete (a set of pre-defined values) Classification (Binary classification — spam/not-spam) Training, Validation, and Test Sets (80% comprises of a training set, 10% is used for validation, and the remaining 10% is used for testing and evaluating models) Feature Engineering — The process of using domain knowledge to select and transfer raw data, create new labels, and make MLs perform better - Helps enhance the performance of ML models - Feature Extraction — Extracting useful information from raw data - Feature Selection — Selecting a subset of relevant features - Feature Transformation — Transforming data for better performance Un-Supervised Learning The goal is to discover inherent patterns, structures, and relationships within input data Associated with clustering, rule learning, and anomaly detection Clustering Technique: Used to group similar points together into clusters based on their features Clustering use cases: market basket analysis (products frequently bought together) and fraud detection (discover anomalies) Semi-Supervised Learning Small amount of labelled data with large amounts of unlabelled data Train models on labelled data and then have the models train on creating labels on unlabelled data The model is then re-trained on all data Self-Supervised Learning “Pre-text tasks” have the model solve simple tasks and learn patterns in the data set Have a model generate pseudo-labels for its own data without having humans label any data first Reinforcement Learning (RL) This type of learning is associated with agents where they learn to make decisions by performing actions in an environment to maximize cumulative rewards Understand the different components: - Agent — The learner - Environment — The external system - Action — The choice made by an agent - Reward — The feedback from the environment based on action - State — The current situation of the environment - Policy — The strategy an agent uses to determine actions based on state Model Fit, Bias, Variance Learn about the key features of model fit, bias, and variance Underfitting -> Model does not predict well for both trained and untrained data Overfitting → Model does well with training data, but cannot do well with untrained data Bias → Predicted value and how close it is to the actual value Understand that overfitted models have low bias, but high variance and underfitted models have a high bias, but low variance Model Evaluation Metrics Model evaluation metrics depend on the model type (classification and regression) For Classification models, we have the following evaluation metrics: - True Positive – Correctly selected - True Negative – Correctly ignored - False Positive – Wrongfully selected - False Negative – Wrongfully ignored Precision → (True Positives)/(True Positives + False Positives) Recall → (True Positives)/(True Positives + False Negatives) F1 → (2*Precision*Recall)/(Precision + Recall) Accuracy → (True Positives + True Negatives)/(True Positives + False Positives + True Negatives + False Negatives) Area Under Curve — Receiver Operator Characteristic Curve (AUC-ROC) → Values from 0 to 1 (1 is perfect model) For Regression models, we have the following evaluation metrics: - Mean Absolute Error (MAE) — Distance between predicted and actual value - Mean Absolute Percentage Error (MAPE) - Root Mean Squared Error (RMSE) - R² → Explains variance and the closer it is to 1, the more accurate the model is Inferencing The idea of a model making a new prediction on new data: - Real Time — Computers have to make decisions quickly as data arrives.
 Speed is preferred over accuracy - Batch Time — Large amounts of data is processed all at once.
 Speed is not the concern, accuracy is - Server-less – Immediate scalable, server-less infrastructure response - Asynchronous – Delayed response time (around one hour) for complex computations Inferencing at the Edge Understand that edge devices have lower computing power and work closer to where data is generated SLM (Small Language Model) – Models that can be deployed on edge devices (low latency, low compute footprint, offline capability) like Raspberry PI LLM (Large Language Model) – Models deployed on a remote server (high latency, must be online, more powerful model) Phases of Machine Learning Understand the different phases of ML.
 Gathering data (exploratory data analysis, EDA) > Data Processing > Feature Engineering > Model Creation > Training/Fine Tuning > Model Deployment > Model Evaluation Hyper Parameters Understand and utilize hyper parameters to fine tune and refine models: - Learning Rate - Batch Size - Number of Epochs - Regularization AWS AI Services AWS Comprehend → Utilizes NLP and ML to generate insights from text, key phrases, people, brands, etc.
 Named Entity Recognition, Custom Entity Recognition AWS Translate → Utilized for accurate language translation AWS Transcribe → Service for handling speech recognition and converting speech to text AWS Polly → Service for creating life-like speech from text, lexicons define how to read certain pieces of text, SSML, Voice Engines, etc.
 AWS Rekognition → Find objects, people, text, scenes in images and videos.
 Facial analysis and facial search, content moderation API for monitoring different images AWS Lex → Build chatbots quickly for your applications using voice and text, supports multiple languages AWS Personalize → Utilized for building apps with real-time personalized recommendations AWS Textract → Automatically extracts text, handwriting, and data from any scanned documents using AL/ML AWS Kendra → Fully managed document search service powered by ML.
 Extract answers from within a document, natural language capabilities AWS Mechanical Turk → Virtual workforce which allows users to complete simple human tasks and get paid AWS A2I → Human oversight of ML predictions in production AWS Transcribe Medical → Automatically convert medical-related speech to text.
 Has the ability to transcribe medical terminologies and uses NLP to detect protected health information AWS Sagemaker Understand that Sagemaker is used to build, test, and deploy ML models from scratch Sagemaker Data Wrangler – Allows one to work with data, perform feature engineering, and much more Sagemaker Feature Store – Allows one to define, work, store, and directly publish features Sagemaker Clarify – Detect and remove bias from models Sagemaker Ground Truth – Relies on RLHF, aligns model to human preferences, data generation and annotations Sagemaker Model Cards — Learn essential model information, risk ratings, training details, etc.
 Sagemaker Dashboard — Centralized repository where you can gather information and insights into all your personal models Sagemaker Model Monitoring — Monitor the quality of your models in production and setup alerts for deviations in model quality Sagemaker Model Registry — Centralized repository to track, catalog, manage, and have version control of all your models Sagemaker Pipeline — Extension of DevOps where you can have CI/CD for each of your models (MLOps) Sagemaker Canvas — No-code solution for creating and deploying your ML models Sagemaker Jumpstart — Customize and work with FMs from various providers via AWS Bedrock AI Challenges and Responsibilities Understand the various challenges and responsibilities that come with AI.
 Learn the different measures one can take to effectively reduce risks and optimize productivity for the better.
 Understand what is Responsible AI and the different aspects of governance, compliance, security, and so on Focus on these key terms: Responsible AI Security Governance Compliance Partial Dependence Plots – Shows how a single feature can influence the outcome while holding the other features constant Challenges of Generative AI Toxicity — Generating content that is offensive, disturbing, or inappropriate Hallucinations — Assertions or claims that sound true, but are incorrect Plagiarism/Cheating — Worries that Generative AI can be used to write college essays, writing samples for job applications, and so on Prompt Misuses Poisoning— Intentional introduction of malicious or biased data into the training dataset of the model Hijacking — Influencing the outputs by embedding specific instructions within the prompts themselves Exposure — The risk of exposing sensitive or confidential information to a model during training or inference Prompt Leaking — The unintentional disclosure or leaking of prompts or inputs used within a model Jailbreaking — Repeatedly asking the model unauthorized questions to provoke a response Generative AI Scoping Matrix From Low Ownership → High Ownership Consumer App Enterprise App Pre-trained Models Fine-tuned Models Self-Trained Models MLOps An extension of DevOps Data, Code, Model repositories for monitoring and version control Allows developers to continuously retrain, test, and deploy ML models Pipelines are built separately for each stage and deployment is automated Additional AWS Services Learn and read more about each of these on your own.
 The following list is a summary of AWS services that might appear on the exam: AWS IAM → Users, groups, roles, policies (JSON documents), and the least privilege principle.
 Learn more about this service by reading this article.
 AWS S3 → Object storage, website hosting, naming conventions, bucket policies, CORS policy, storage classes, object lifecycle, intelligent-tiering, etc.
 AWS EC2 → Server configuration, server state, EC2 user data, etc.
 AWS Lambda → Server-less functions to run code, etc.
 AWS Macie → Intelligent AI service used to detect and protect sensitive information AWS Config → Track updates made to your AWS environment AWS Inspector → Track any vulnerabilities in your deployed resources AWS Trusted Advisor → AWS service used to empower users for best security practices, operational excellence, provide guidelines for best practices, etc.
 AWS CloudTrail → Monitor user activity and identify any risks AWS Artifact → Lookup and read about compliance documents AWS Audit Manager → Lookup your resources and check to see if they are compliant and adhere to the appropriate standards AWS VPC → VPC Endpoints, PrivateLink, IGW/NAT gateways, public/private subnets, NACLs, security groups, etc.
 Conclusion I hope you found this article summary useful for the AWS AI Practitioner exam.
 By no means is this article intended to replace any of the actual AWS AI Practitioner material or hands-on labs.
 I wrote this article to serve as a nice supplementary piece to your studies.
 Below, you will find helpful resources which you can use to further enhance your study: Article README.
md file AWS AI Practitioner Certification Guide AWS Certification Paths AWS Skill Builder I hope you found this article useful and look forward to more in the future.
 Happy studying!
 Thank you for being a part of the community Before you go: Be sure to clap and follow the writer ️👏️️ Follow us: X | LinkedIn | YouTube | Newsletter | Podcast | Differ | Twitch Check out CoFeed, the smart way to stay up-to-date with the latest in tech 🧪 Start your own free AI-powered blog on Differ 🚀 Join our content creators community on Discord 🧑🏻‍💻 For more content, visit plainenglish.
io + stackademic.
com
